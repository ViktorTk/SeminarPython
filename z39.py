# Даны два массива чисел. Требуется вывести те элементы
# первого массива (в том порядке, в каком они идут в первом
# массиве), которых нет во втором массиве. Пользователь вводит
# число N - количество элементов в первом массиве, затем N
# чисел - элементы массива. Затем число M - количество
# элементов во втором массиве. Затем элементы второго массива.

# Ввод:                      Вывод:
# 7                          3 3 2 12
# 3 1 3 4 2 4 12
# 6
# 4 15 43 1 15 1             (каждое число вводится с новой строки)


# ВАРИАНТ РЕШЕНИЯ 1:

# arr1 = [3,1,3,4,2,4,12]
# arr2 = [4,15,43,1,15,1]
# def delete(arr3, arr4):
#     new1 = []
#     count = 0
#     for i in range(len(arr3)):
#         count+=1
#         if arr3[i] in arr4:
#             pass
#         else:
#             new1.append(arr3[i])
#     print (count)
#     return new1
# print (delete(arr1, arr2))





# ВАРИАНТ РЕШЕНИЯ 2: вместо цикла - применяется рекурсия

arr1 = [3,1,3,4,2,4,12,34,5]
arr2 = [4,15,43,1,15,1]
def delete(arr3, arr4, arr5): ## [3,1,3,4,2,4,12,34,5]
    if arr4[0] not in arr5:
        arr3.append(arr4[0])
    if len(arr4)==1:
        return arr3
    return delete(arr3, arr4[1:],arr5) ## [1,3,4,2,4,12,34,5] срезает элементы по 1 с начала
print (delete([], arr1, arr2))